From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Siroshun09 <siro.shun8@gmail.com>
Date: Tue, 20 Sep 2022 14:16:03 +0900
Subject: [PATCH] okocraft add more timings


diff --git a/src/main/java/co/aikar/timings/WorldTimingsHandler.java b/src/main/java/co/aikar/timings/WorldTimingsHandler.java
index fe79c0add4f7cb18d487c5bb9415c40c5b551ea2..bc3121996f3917dd267b6a8a091bb69e44e6d7d5 100644
--- a/src/main/java/co/aikar/timings/WorldTimingsHandler.java
+++ b/src/main/java/co/aikar/timings/WorldTimingsHandler.java
@@ -67,6 +67,26 @@ public class WorldTimingsHandler {
     public final Timing chunkUnloadPrepareSave;
     public final Timing chunkUnloadPOISerialization;
     public final Timing chunkUnloadDataSave;
+    // okocraft start - add more timings
+    public final Timing entityUpdateVariousThings;
+    public final Timing entityAiStep;
+    public final Timing livingEntityAiStepAi;
+    public final Timing livingEntityAiStepTravel;
+    public final Timing livingEntityAiStepPush;
+
+    public final Timing serverAiStepSensing;
+    public final Timing serverAiStepTargetSelector;
+    public final Timing serverAiStepGoalSelector;
+    public final Timing serverAiStepNavigation;
+    public final Timing serverAiStepMobTick;
+    public final Timing serverAiStepMove;
+    public final Timing serverAiStepLook;
+    public final Timing serverAiStepJump;
+
+    public final Timing villagerBrainTick;
+
+    public final Timing behaviorAcquirePoiPoiAccess;
+    // okocraft end
 
     public WorldTimingsHandler(Level server) {
         String name = ((PrimaryLevelData) server.getLevelData()).getLevelName() + " - ";
@@ -131,6 +151,28 @@ public class WorldTimingsHandler {
         chunkUnloadPrepareSave = Timings.ofSafe(name + "Chunk unload - Async Save Prepare");
         chunkUnloadPOISerialization = Timings.ofSafe(name + "Chunk unload - POI Data Serialization");
         chunkUnloadDataSave = Timings.ofSafe(name + "Chunk unload - Data Serialization");
+
+        // okocraft start - add more timings
+        entityUpdateVariousThings = Timings.ofSafe(name + "Entity Update Various Things");
+        entityAiStep = Timings.ofSafe(name + "Entity AI Step");
+
+        livingEntityAiStepAi = Timings.ofSafe(name + "LivingEntity AI Step - Ai");
+        livingEntityAiStepTravel = Timings.ofSafe(name + "LivingEntity AI Step - Travel");
+        livingEntityAiStepPush = Timings.ofSafe(name + "LivingEntity AI Step - Push");
+
+        serverAiStepSensing = Timings.ofSafe(name + "Server AI Step - Sensing");
+        serverAiStepTargetSelector = Timings.ofSafe(name + "Server AI Step - Target Selector");
+        serverAiStepGoalSelector = Timings.ofSafe(name + "Server AI Step - Goal Selector");
+        serverAiStepNavigation = Timings.ofSafe(name + "Server AI Step - Navigation");
+        serverAiStepMobTick = Timings.ofSafe(name + "Server AI Step - Mob Tick");
+        serverAiStepMove = Timings.ofSafe(name + "Server AI Step - Move");
+        serverAiStepLook = Timings.ofSafe(name + "Server AI Step - Look");
+        serverAiStepJump = Timings.ofSafe(name + "Server AI Step - Jump");
+
+        villagerBrainTick = Timings.ofSafe(name + "Villager Brain Tick");
+
+        behaviorAcquirePoiPoiAccess = Timings.ofSafe(name + "Behavior AcquirePoi Poi Access");
+        // okocraft end
     }
 
     public static Timing getTickList(ServerLevel worldserver, String timingsType) {
diff --git a/src/main/java/net/minecraft/world/entity/LivingEntity.java b/src/main/java/net/minecraft/world/entity/LivingEntity.java
index 04896125b861508e2c966010607514a41e04dd72..b8a825a7ee342d71e2950f05c86f3fdf18fe4457 100644
--- a/src/main/java/net/minecraft/world/entity/LivingEntity.java
+++ b/src/main/java/net/minecraft/world/entity/LivingEntity.java
@@ -3384,6 +3384,7 @@ public abstract class LivingEntity extends Entity {
             this.serverAiStep();
             this.level.getProfiler().pop();
         }
+        this.level.timings.livingEntityAiStepAi.stopTiming(); // okocraft - add more timings
 
         this.level.getProfiler().pop();
         this.level.getProfiler().push("jump");
diff --git a/src/main/java/net/minecraft/world/entity/Mob.java b/src/main/java/net/minecraft/world/entity/Mob.java
index 94b45579dc371ee980565aed2f5dee78ebd44427..d58e8c4649214b53131737dea53740360ee4eddb 100644
--- a/src/main/java/net/minecraft/world/entity/Mob.java
+++ b/src/main/java/net/minecraft/world/entity/Mob.java
@@ -874,7 +874,9 @@ public abstract class Mob extends LivingEntity {
         }
         // Paper end
         this.level.getProfiler().push("sensing");
+        this.level.timings.serverAiStepSensing.startTiming();
         this.sensing.tick();
+        this.level.timings.serverAiStepSensing.stopTiming();
         this.level.getProfiler().pop();
         int i = this.level.getServer().getTickCount() + this.getId();
 
diff --git a/src/main/java/net/minecraft/world/entity/npc/Villager.java b/src/main/java/net/minecraft/world/entity/npc/Villager.java
index 76a9da8209d557b913c49ccd281bf147b9ac4fa4..cae9ba615b7a5c7f9b4959e446d83a83c84d9fd4 100644
--- a/src/main/java/net/minecraft/world/entity/npc/Villager.java
+++ b/src/main/java/net/minecraft/world/entity/npc/Villager.java
@@ -250,12 +250,14 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
     protected void customServerAiStep() { mobTick(false); }
     protected void mobTick(boolean inactive) {
         this.level.getProfiler().push("villagerBrain");
+        this.level.timings.villagerBrainTick.startTiming(); // okocraft - add more timings
         // Pufferfish start
         if (!inactive) {
             if (this.behaviorTick++ % this.activatedPriority == 0) // Pufferfish
             this.getBrain().tick((ServerLevel) this.level, this); // Paper
          }
         // Pufferfish end
+        this.level.timings.villagerBrainTick.stopTiming(); // okocraft - add more timings
         this.level.getProfiler().pop();
         if (this.assignProfessionWhenSpawned) {
             this.assignProfessionWhenSpawned = false;
