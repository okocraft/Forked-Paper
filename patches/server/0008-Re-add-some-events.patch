From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Siroshun09 <siro.shun8@gmail.com>
Date: Thu, 22 Jun 2023 11:53:26 +0900
Subject: [PATCH] Re-add some events

- EntityPortalReadyEvent
- spawn/respawn events (that cannot modify the location)
- PlayerChangedWorldEvent

diff --git a/src/main/java/net/minecraft/server/level/ServerPlayer.java b/src/main/java/net/minecraft/server/level/ServerPlayer.java
index 2480166aa0f7acefc1302bc44bc31b6ad48c0711..a6859fe0a5e521963d22e44328ab668fb24282d2 100644
--- a/src/main/java/net/minecraft/server/level/ServerPlayer.java
+++ b/src/main/java/net/minecraft/server/level/ServerPlayer.java
@@ -1758,6 +1758,7 @@ public class ServerPlayer extends net.minecraft.world.entity.player.Player imple
             // Paper end - Reset shield blocking on dimension change
 
             this.triggerDimensionChangeTriggers(originWorld);
+            new org.bukkit.event.player.PlayerChangedWorldEvent(this.getBukkitEntity(), originWorld.getWorld()).callEvent(); // okocraft - Call PlayerChangedWorldEvent
 
             // finished
 
diff --git a/src/main/java/net/minecraft/server/players/PlayerList.java b/src/main/java/net/minecraft/server/players/PlayerList.java
index 683b5c164bf40a9d900cb96134350f2fdd06b620..cc9dfdc4d042ca1185f54c912ae462def4e7b8d4 100644
--- a/src/main/java/net/minecraft/server/players/PlayerList.java
+++ b/src/main/java/net/minecraft/server/players/PlayerList.java
@@ -358,9 +358,10 @@ public abstract class PlayerList {
         // Spigot start - spawn location event
         Player spawnPlayer = player.getBukkitEntity();
         org.spigotmc.event.player.PlayerSpawnLocationEvent ev = new org.spigotmc.event.player.PlayerSpawnLocationEvent(spawnPlayer, spawnPlayer.getLocation());
+        ev.callEvent(); // okocraft - Call PlayerSpawnLocationEvent that cannot modify spawn location
         //this.cserver.getPluginManager().callEvent(ev); // Folia - region threading - TODO WTF TO DO WITH THIS EVENT?
 
-        Location loc = ev.getSpawnLocation();
+        Location loc = spawnPlayer.getLocation(); // okocraft -  Call PlayerSpawnLocationEvent; Prevents the spawn location from being changed
         worldserver1 = ((CraftWorld) loc.getWorld()).getHandle();
 
         player.spawnIn(worldserver1);
diff --git a/src/main/java/net/okocraft/paper/EventCaller.java b/src/main/java/net/okocraft/paper/EventCaller.java
new file mode 100644
index 0000000000000000000000000000000000000000..3af73127825b504eb5c30154578a6c7e3526de1c
--- /dev/null
+++ b/src/main/java/net/okocraft/paper/EventCaller.java
@@ -0,0 +1,38 @@
+package net.okocraft.paper;
+
+import com.google.common.collect.ImmutableSet;
+import net.minecraft.server.level.ServerPlayer;
+import org.bukkit.entity.Player;
+import org.bukkit.event.player.PlayerRespawnEvent;
+import org.jetbrains.annotations.NotNull;
+import org.jetbrains.annotations.Nullable;
+
+import java.util.function.Consumer;
+
+public final class EventCaller {
+
+    public static void callRespawnByEndPortalEvent(@NotNull Player player) {
+        new PlayerRespawnEvent(
+                player,
+                player.getLocation(),
+                false,
+                false,
+                PlayerRespawnEvent.RespawnReason.END_PORTAL,
+                ImmutableSet.<PlayerRespawnEvent.RespawnFlag>builder().add(PlayerRespawnEvent.RespawnFlag.END_PORTAL)
+        ).callEvent();
+    }
+
+    private static final Consumer<ServerPlayer> CALL_RESPAWN_EVENT =
+            player -> new PlayerRespawnEvent(
+                    player.getBukkitEntity(),
+                    player.getBukkitEntity().getLocation(),
+                    false,
+                    false,
+                    PlayerRespawnEvent.RespawnReason.DEATH,
+                    ImmutableSet.builder()
+            );
+
+    public static @NotNull Consumer<ServerPlayer> appendCallingRespawnEvent(@Nullable Consumer<ServerPlayer> consumer) {
+        return consumer != null ? consumer.andThen(CALL_RESPAWN_EVENT) : CALL_RESPAWN_EVENT;
+    }
+}
