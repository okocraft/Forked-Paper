From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Siroshun09 <siro.shun8@gmail.com>
Date: Wed, 7 Aug 2024 23:30:32 +0900
Subject: [PATCH] Revert "Add debug for chunk system unload crash"

This reverts commit a6794976022325203a9325030123527b88b2bf86.

diff --git a/src/main/java/ca/spottedleaf/moonrise/patches/chunk_system/scheduling/NewChunkHolder.java b/src/main/java/ca/spottedleaf/moonrise/patches/chunk_system/scheduling/NewChunkHolder.java
index 7a719d427a537c6fa1f60d8ebb9130e7eda9618a..60399be0046dbb06be643461c8f3ce1491542dfd 100644
--- a/src/main/java/ca/spottedleaf/moonrise/patches/chunk_system/scheduling/NewChunkHolder.java
+++ b/src/main/java/ca/spottedleaf/moonrise/patches/chunk_system/scheduling/NewChunkHolder.java
@@ -749,22 +749,9 @@ public final class NewChunkHolder {
 
     /** Unloaded from chunk map */
     private boolean unloaded;
-    private Throwable lastUnloadAdd;
 
     void markUnloaded() {
         this.unloaded = true;
-        if (this.inUnloadQueue) {
-            if (this.lastUnloadAdd != null) {
-                LOGGER.error("Unloaded chunkholder " + this.toString() + " while in the unload queue", this.lastUnloadAdd);
-            } else {
-                // should never happen
-                LOGGER.error("Unloaded chunkholder " + this.toString() + " while in the unload queue without a throwable");
-            }
-
-            // prevent crash by removing (note: we hold scheduling lock here)
-            this.inUnloadQueue = false;
-            this.scheduler.chunkHolderManager.unloadQueue.removeChunk(this.chunkX, this.chunkZ);
-        }
     }
 
     private boolean inUnloadQueue = false;
@@ -782,14 +769,12 @@ public final class NewChunkHolder {
             // ensure in unload queue
             if (!this.inUnloadQueue) {
                 this.inUnloadQueue = true;
-                this.lastUnloadAdd = new Throwable();
                 this.scheduler.chunkHolderManager.unloadQueue.addChunk(this.chunkX, this.chunkZ);
             }
         } else {
             // ensure not in unload queue
             if (this.inUnloadQueue) {
                 this.inUnloadQueue = false;
-                this.lastUnloadAdd = null;
                 this.scheduler.chunkHolderManager.unloadQueue.removeChunk(this.chunkX, this.chunkZ);
             }
         }
