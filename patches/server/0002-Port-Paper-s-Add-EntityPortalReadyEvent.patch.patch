From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Siroshun09 <siro.shun8@gmail.com>
Date: Thu, 22 Jun 2023 11:53:26 +0900
Subject: [PATCH] Port Paper's Add-EntityPortalReadyEvent.patch


diff --git a/src/main/java/net/minecraft/world/entity/Entity.java b/src/main/java/net/minecraft/world/entity/Entity.java
index ee15661227754149164893d6acf678d13b2e1b27..c7ec0e148b775e98cb2a41289be1afff41cb25bb 100644
--- a/src/main/java/net/minecraft/world/entity/Entity.java
+++ b/src/main/java/net/minecraft/world/entity/Entity.java
@@ -3993,12 +3993,21 @@ public abstract class Entity implements Nameable, EntityAccess, CommandSource {
         io.papermc.paper.util.TickThread.ensureTickThread(this, "Cannot portal entity async");
 
         ServerLevel destination = this.getServer().getLevel(this.level().getTypeKey() == LevelStem.NETHER ? Level.OVERWORLD : Level.NETHER);
+        // okocraft start - Port Paper's Add-EntityPortalReadyEvent.patch
+        io.papermc.paper.event.entity.EntityPortalReadyEvent event = new io.papermc.paper.event.entity.EntityPortalReadyEvent(this.getBukkitEntity(), destination == null ? null : destination.getWorld(), org.bukkit.PortalType.NETHER);
+        if (!event.callEvent()) {
+            this.portalTime = 0;
+            return false;
+        } else {
+            destination = event.getTargetWorld() == null ? null : ((CraftWorld) event.getTargetWorld()).getHandle();
+        // okocraft end
         if (destination == null) {
             // wat
             return false;
         }
 
         return this.portalToAsync(destination, false, PortalType.NETHER, null);
+        } // okocraft
     }
 
     private static final java.util.concurrent.atomic.AtomicLong CREATE_PORTAL_DOUBLE_CHECK = new java.util.concurrent.atomic.AtomicLong();
