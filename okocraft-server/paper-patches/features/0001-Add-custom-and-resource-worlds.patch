From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Siroshun09 <siro.shun8@gmail.com>
Date: Sat, 21 Dec 2024 06:04:23 +0900
Subject: [PATCH] Add custom and resource worlds


diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index ecab0322ae03b7a3133eae192076aaf463237cd6..6be54daeb5467ac38883ed4074d3eaff848cb3df 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -1260,6 +1260,12 @@ public final class CraftServer implements Server {
     @Override
     public World createWorld(WorldCreator creator) {
         if (true) throw new UnsupportedOperationException(); // Folia - not implemented properly yet
+        // okocraft start - Add custom worlds
+        return createCustomWorld(creator);
+    }
+
+    public World createCustomWorld(WorldCreator creator) {
+        // okocraft end - Add custom worlds
         Preconditions.checkState(this.console.getAllLevels().iterator().hasNext(), "Cannot create additional worlds on STARTUP");
         //Preconditions.checkState(!this.console.isIteratingOverLevels, "Cannot create a world while worlds are being ticked"); // Paper - Cat - Temp disable. We'll see how this goes.
         Preconditions.checkArgument(creator != null, "WorldCreator cannot be null");
@@ -1438,11 +1444,25 @@ public final class CraftServer implements Server {
         }
 
         this.console.addLevel(serverLevel); // Paper - Put world into worldlist before initing the world; move up
+        // okocraft start - Add custom worlds; Copied from MinecraftServer L740
+        int loadRegionRadius = 1024 >> 4;
+        serverLevel.randomSpawnSelection = new net.minecraft.world.level.ChunkPos(serverLevel.getChunkSource().randomState().sampler().findSpawnPosition());
+        for (int currX = -loadRegionRadius; currX <= loadRegionRadius; ++currX) {
+            for (int currZ = -loadRegionRadius; currZ <= loadRegionRadius; ++currZ) {
+                net.minecraft.world.level.ChunkPos pos = new net.minecraft.world.level.ChunkPos(currX, currZ);
+                serverLevel.moonrise$getChunkTaskScheduler().chunkHolderManager.addTicketAtLevel(
+                        net.minecraft.server.level.TicketType.UNKNOWN, pos, ca.spottedleaf.moonrise.patches.chunk_system.scheduling.ChunkHolderManager.MAX_TICKET_LEVEL, null
+                );
+            }
+        }
+        // okocraft end - Add custom worlds
+        if (false) // okocraft - Add custom worlds; Not needed for loading custom worlds
         this.console.initWorld(serverLevel, primaryLevelData, primaryLevelData, primaryLevelData.worldGenOptions());
 
         serverLevel.setSpawnSettings(true);
         // Paper - Put world into worldlist before initing the world; move up
 
+        if (false) // okocraft - Add custom worlds; Not needed for loading custom worlds
         this.getServer().prepareLevels(serverLevel.getChunkSource().chunkMap.progressListener, serverLevel);
         io.papermc.paper.FeatureHooks.tickEntityManager(serverLevel); // SPIGOT-6526: Load pending entities so they are available to the API // Paper - chunk system
 
