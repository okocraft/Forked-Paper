--- a/net/minecraft/server/PlayerAdvancements.java
+++ b/net/minecraft/server/PlayerAdvancements.java
@@ -146,7 +_,7 @@
         data.forEach((path, progress) -> {
             AdvancementHolder advancementHolder = advancementManager.get(path);
             if (advancementHolder == null) {
-                if (!path.getNamespace().equals(ResourceLocation.DEFAULT_NAMESPACE)) return; // CraftBukkit
+                if (true || !path.getNamespace().equals(ResourceLocation.DEFAULT_NAMESPACE)) return; // CraftBukkit // okocraft - Disable advancement warning
                 LOGGER.warn("Ignored advancement '{}' in progress file {} - it doesn't exist anymore?", path, this.playerSavePath);
             } else {
                 this.startProgress(advancementHolder, progress);
@@ -228,7 +_,9 @@
     private void markForVisibilityUpdate(AdvancementHolder advancement) {
         AdvancementNode advancementNode = this.tree.get(advancement);
         if (advancementNode != null) {
+            synchronized (this.rootsToUpdate) { // okocraft - region threading
             this.rootsToUpdate.add(advancementNode.root());
+            } // okocraft - region threading
         }
     }
 
@@ -265,15 +_,22 @@
 
     public void flushDirty(ServerPlayer player, boolean showAdvancements) {
         if (this.isFirstPacket || !this.rootsToUpdate.isEmpty() || !this.progressChanged.isEmpty()) {
+            // okocraft start - region threading
+            Set<AdvancementNode> rootsToUpdate;
+            synchronized (this.rootsToUpdate) {
+                rootsToUpdate = Set.copyOf(this.rootsToUpdate);
+                this.rootsToUpdate.clear();
+            }
+            // okocraft end - region threading
             Map<ResourceLocation, AdvancementProgress> map = new HashMap<>();
             Set<AdvancementHolder> set = new java.util.TreeSet<>(java.util.Comparator.comparing(adv -> adv.id().toString())); // Paper - Changed from HashSet to TreeSet ordered alphabetically.
             Set<ResourceLocation> set1 = new HashSet<>();
 
-            for (AdvancementNode advancementNode : this.rootsToUpdate) {
+            for (AdvancementNode advancementNode : rootsToUpdate) { // okocraft - region threading
                 this.updateTreeVisibility(advancementNode, set, set1);
             }
 
-            this.rootsToUpdate.clear();
+            // okocraft - region threading
 
             for (AdvancementHolder advancementHolder : this.progressChanged) {
                 if (this.visible.contains(advancementHolder)) {
