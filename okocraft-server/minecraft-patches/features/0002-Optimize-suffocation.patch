From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Siroshun09 <siro.shun8@gmail.com>
Date: Sat, 21 Dec 2024 07:26:49 +0900
Subject: [PATCH] Optimize suffocation

The isInWall check to determine suffocation is quite expensive, and
often is completely unnecessary to check. We do two things here to
improve this:

1. We only check for suffocation once per 20 ticks. The maximum
no-damage ticks value means that this change should be extremely
difficult, if not impossible, for players to notice.

2. We additionally execute a check to see if the player can even take
damage in the first place. This check doesn't improve performance much
but is so much cheaper than the suffocation check that it's worth
keeping it.

diff --git a/net/minecraft/world/entity/LivingEntity.java b/net/minecraft/world/entity/LivingEntity.java
index 5ba06cf6b26baa5acae9d64111ee3f61533e7867..ea819cbb8eaa7921c5042a6dc688c35ade2df386 100644
--- a/net/minecraft/world/entity/LivingEntity.java
+++ b/net/minecraft/world/entity/LivingEntity.java
@@ -467,7 +467,7 @@ public abstract class LivingEntity extends Entity implements Attackable {
         if (this.isAlive()) {
             boolean flag = this instanceof Player;
             if (this.level() instanceof ServerLevel serverLevel1) {
-                if (this.isInWall()) {
+                if (gg.airplane.structs.OptimizeSuffocation.shouldCheckForSuffocation(this, serverLevel1) && this.isInWall()) { // Pufferfish - optimize suffocation
                     this.hurtServer(serverLevel1, this.damageSources().inWall(), 1.0F);
                 } else if (flag && !this.level().getWorldBorder().isWithinBounds(this.getBoundingBox())) {
                     double d = this.level().getWorldBorder().getDistanceToBorder(this) + this.level().getWorldBorder().getDamageSafeZone();
